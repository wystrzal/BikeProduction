@model ShopMVC.Models.ViewModels.CatalogProductsViewModel

@if (Model.CatalogProducts.Count > Model.FilteringData.Take)
{
    <script>
        $(document).ready(() => {
            $("html, body").animate({
                scrollTop: ($(document).height() - $(window).height()) * 0.65
            }, 0);
        })
    </script>
}


<div class="container-fluid text-center">
    <div class="row">

        <partial name="_SortFilter" model="Model" />

        <div class="col-12">
            <div class="row" id="catalogProducts">
                @{
                    foreach (var product in Model.CatalogProducts)
                    {
                        <div class="col-md-4 mb-4 col-6">
                            <h5>@product.ProductName</h5>
                            <h6>@product.Price$</h6>
                            <a asp-controller="Catalog" asp-action="ProductDetail" asp-route-productId="@product.Id">
                                <img src="@product.PhotoUrl" class="img-fluid mb-1" style="height: 250px;" />
                            </a>
                            <div>
                                @if (User.Claims.Any())
                                {
                                    <button id="@product.Id-buy" class="btn btn-success d-inline">Buy</button>
                                }
                                else
                                {
                                    <button class="btn btn-success d-inline" data-toggle="modal" data-target="#loginModal"> Buy </button>
                                }
                            </div>
                        </div>

                        <partial name="_BuyProduct" model="@product" />
                    }
                }
            </div>

            @using (@Html.BeginForm("Index", "Catalog", FormMethod.Get))
            {
                @Html.TextBoxFor(x => x.FilteringData.Take, new { style = "display: none;" })
                @Html.TextBoxFor(x => x.FilteringData.BrandId, new { style = "display: none;" })

                @Html.TextBoxFor(x => x.FilteringData.Sort, new { style = "display: none;" })
                @Html.TextBoxFor(x => x.FilteringData.Colors, new { style = "display: none;" })
                @Html.TextBoxFor(x => x.FilteringData.BikeType, new { style = "display: none;" })

                for (int i = 0; i < Model.CatalogProducts.Count; i++)
                {
                    @Html.TextBoxFor(x => x.CatalogProducts[i].Id, new { style = "display: none;" })
                    @Html.TextBoxFor(x => x.CatalogProducts[i].PhotoUrl, new { style = "display: none;" })
                    @Html.TextBoxFor(x => x.CatalogProducts[i].Price, new { style = "display: none;" })
                    @Html.TextBoxFor(x => x.CatalogProducts[i].ProductName, new { style = "display: none;" })
                    @Html.TextBoxFor(x => x.CatalogProducts[i].Reference, new { style = "display: none;" })
                }

                <input id="expandCatalogProducts" type="submit" value="&#8659;" class="btn catalog__arrow">
            }
        </div>
    </div>
</div>
