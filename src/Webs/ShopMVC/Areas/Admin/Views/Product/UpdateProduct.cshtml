@model ShopMVC.Areas.Admin.Models.ViewModels.PostPutProductViewModel
@using ShopMVC.Extensions


<div class="col-12 col-md-9 offset-md-3 col-lg-10 offset-lg-2 mt-4">
    <h4>Update Product</h4>
</div>

@using (Html.BeginForm("UpdateProduct", "Product", FormMethod.Post))
{
    @Html.TextBoxFor(x => x.Product.Id, new { style = "display: none;" })

    <div class="row col-12 mt-3 col-md-10 offset-md-2">

        <div class="col-lg-6 offset-lg-0 offset-md-1 mb-3">
            <label for="productName">Product Name</label>
            @Html.TextBoxFor(x => x.Product.ProductName, new { id = "productName", @class = "form-control" })
        </div>
        <div class="col-lg-6 offset-lg-0 offset-md-1 mb-3">
            <label for="reference">Reference</label>
            @Html.TextBoxFor(x => x.Product.Reference, new { id = "reference", @class = "form-control" })
        </div>
        <div class="col-lg-6 offset-lg-0 offset-md-1 mb-3">
            <label for="price">Price</label>
            @Html.TextBoxFor(x => x.Product.Price, new { id = "price", @type = "number", @class = "form-control" })
        </div>
        <div class="col-lg-6 offset-lg-0 offset-md-1 mb-3">
            <label class="d-block">Brand</label>
            @Html.DropDownListFor(x => x.Product.BrandId, Model.Brand, new { @class = "form-control" })
        </div>
        <div class="col-lg-6 offset-lg-0 offset-md-1 mb-3">
            <label class="d-block">Color</label>
            @Html.DropDownListFor(x => x.Product.Colors, Model.Product.Colors.SelectListItem(), new { @class = "form-control" })
        </div>
        <div class="col-lg-6 offset-lg-0 offset-md-1 mb-3">
            <label class="d-block">Bike Type</label>
            @Html.DropDownListFor(x => x.Product.BikeType, Model.Product.BikeType.SelectListItem(), new { @class = "form-control" })
        </div>
        <div class="col-12 col-md-11 offset-md-1 offset-lg-0 col-lg-12 mb-3">
            <label for="photoUrl">PhotoUrl</label>
            @Html.TextBoxFor(x => x.Product.PhotoUrl, new { id = "photoUrl", @class = "form-control" })
        </div>
        <div class="text-center col-12 col-md-11 offset-md-1 offset-lg-0 col-lg-12 mb-3">
            <button type="submit" class="btn btn-success">Update</button>
        </div>
        <div class="text-center col-12 col-md-11 offset-md-1 offset-lg-0 col-lg-12 mb-3">
            <div class="text-danger" style="list-style-type: none;">@Html.ValidationSummary()</div>
        </div>
    </div>
}

@if (Model.Parts != null && Model.Parts.Count > 0)
{
    <div class="col-12 col-md-9 offset-md-3 col-lg-10 offset-lg-2 mt-4">
        <h4>Parts</h4>
    </div>

    <div class="row text-center pt-4">
        <div class="col-md-9 offset-md-3 col-12 col-lg-10 offset-lg-2 text-center">

            @foreach (var part in Model.Parts)
            {
                <div class="custom-shadow border-top p-2 mb-1 row">
                    <div class="col-12 col-sm-3">@part.PartName</div>
                    <div class="col-12 col-sm-3">Reference: @part.Reference</div>
                    <div class="col-12 col-sm-3">Qty: @part.Quantity</div>
                    <div class="col-12 col-sm-3">
                        @Html.ActionLink("Delete", "DeleteProductPart", "Product",
                            new { reference = Model.Product.Reference, partId = part.Id, productId = Model.Product.Id},
                            new { @class = "btn btn-danger"})
                    </div>
                </div>
            }
        </div>
    </div>
}

<script>
    $("option[value='All']").remove();
</script>
